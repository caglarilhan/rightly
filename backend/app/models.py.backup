# Database Models
from sqlmodel import SQLModel, Field, create_engine, Session, select
from typing import Optional, List
from datetime import datetime
import uuid
import json
from enum import Enum

# Enums
class RequestStatus(str, Enum):
    PENDING = "pending"
    IN_PROGRESS = "in_progress"
    COMPLETED = "completed"
    FAILED = "failed"
    CANCELLED = "cancelled"

class RequestType(str, Enum):
    DATA_EXPORT = "data_export"
    DATA_DELETION = "data_deletion"
    DATA_CORRECTION = "data_correction"
    DATA_PORTABILITY = "data_portability"

class SourceType(str, Enum):
    SHOPIFY = "shopify"
    WOOCOMMERCE = "woocommerce"
    CUSTOM = "custom"

class SourceStatus(str, Enum):
    ACTIVE = "active"
    INACTIVE = "inactive"
    ERROR = "error"

class UserRole(str, Enum):
    ADMIN = "admin"
    USER = "user"
    VIEWER = "viewer"

class PlanType(str, Enum):
    FREE = "free"
    BASIC = "basic"
    PRO = "pro"
    ENTERPRISE = "enterprise"

class SubscriptionStatus(str, Enum):
    ACTIVE = "active"
    CANCELLED = "cancelled"
    PAST_DUE = "past_due"
    UNPAID = "unpaid"

class PaymentStatus(str, Enum):
    PENDING = "pending"
    COMPLETED = "completed"
    FAILED = "failed"
    REFUNDED = "refunded"

class ExportFormat(str, Enum):
    JSON = "json"
    CSV = "csv"
    PDF = "pdf"
    ZIP = "zip"

# vNext Compliance Enums
class ConsentStatus(str, Enum):
    OPT_IN = "opt_in"
    OPT_OUT = "opt_out"
    WITHDRAWN = "withdrawn"

class ConsentChannel(str, Enum):
    EMAIL = "email"
    SMS = "sms"
    PUSH = "push"
    WEB = "web"
    PHONE = "phone"

class BreachSeverity(str, Enum):
    LOW = "low"
    MEDIUM = "medium"
    HIGH = "high"
    CRITICAL = "critical"

class BreachStatus(str, Enum):
    DETECTED = "detected"
    INVESTIGATING = "investigating"
    REPORTED = "reported"
    RESOLVED = "resolved"
    CLOSED = "closed"

class Source(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    name: str
    source_type: SourceType
    connection_data: Optional[str] = Field(default=None)  # JSON string
    status: SourceStatus = Field(default=SourceStatus.ACTIVE)
    account_id: int = Field(foreign_key="account.id")
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)

class Plan(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    name: str
    type: PlanType
    price_monthly: float
    price_yearly: float
    features: Optional[str] = Field(default=None)  # JSON string
    is_active: bool = Field(default=True)
    created_at: datetime = Field(default_factory=datetime.utcnow)

class Subscription(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    account_id: int = Field(foreign_key="account.id")
    plan_id: int = Field(foreign_key="plan.id")
    status: SubscriptionStatus
    stripe_subscription_id: Optional[str] = None
    current_period_start: datetime
    current_period_end: datetime
    created_at: datetime = Field(default_factory=datetime.utcnow)

class Payment(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    subscription_id: int = Field(foreign_key="subscription.id")
    amount: float
    currency: str = Field(default="usd")
    status: PaymentStatus
    stripe_payment_intent_id: Optional[str] = None
    created_at: datetime = Field(default_factory=datetime.utcnow)

# User Model
class User(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    organization_id: Optional[int] = Field(foreign_key="organization.id", index=True)
    email: str = Field(unique=True, index=True)
    full_name: str
    company_name: str
    role: UserRole = Field(default=UserRole.USER)
    is_active: bool = Field(default=True)
    is_verified: bool = Field(default=False)
    is_super_admin: bool = Field(default=False)
    
    # Authentication
    password_hash: Optional[str] = None
    last_login: Optional[datetime] = None
    
    # Profile
    phone: Optional[str] = None
    department: Optional[str] = None
    job_title: Optional[str] = None
    
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)
    
    # Additional data
    preferences: Optional[str] = Field(default=None)  # JSON string

# Account Model (for billing)
class Account(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    user_id: int = Field(foreign_key="user.id")
    stripe_customer_id: Optional[str] = None
    subscription_status: str = Field(default="free")  # free, trial, active, cancelled
    trial_ends_at: Optional[datetime] = None
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)

# DSAR Request Model
class DSARRequest(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    request_id: str = Field(default_factory=lambda: str(uuid.uuid4()), unique=True, index=True)
    user_id: int = Field(foreign_key="user.id")
    request_type: str  # access, deletion, rectification
    subject_email: str
    subject_name: str
    status: str = Field(default="pending")  # pending, processing, completed, rejected
    description: Optional[str] = None
    additional_info: Optional[str] = None  # JSON string
    due_date: datetime
    completed_at: Optional[datetime] = None
    source: str = Field(default="manual")  # manual, shopify, woocommerce
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)

# Audit Log Model
class AuditLog(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    user_id: Optional[int] = Field(foreign_key="user.id")
    action: str
    resource_type: str
    resource_id: Optional[str] = None
    details: Optional[str] = None  # JSON string
    ip_address: Optional[str] = None
    user_agent: Optional[str] = None
    created_at: datetime = Field(default_factory=datetime.utcnow)

# Data Source Model
class DataSource(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    user_id: int = Field(foreign_key="user.id")
    name: str
    type: str  # shopify, woocommerce, custom
    config: str  # JSON string
    is_active: bool = Field(default=True)
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)

# Email Notification Model
class EmailNotification(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    user_id: int = Field(foreign_key="user.id")
    type: str  # dsar_received, dsar_completed, consent_updated, export_ready, breach_notification
    recipient_email: str
    subject: str
    content: str
    status: str = Field(default="pending")  # pending, sent, failed, suppressed
    sent_at: Optional[datetime] = None
    retry_count: int = Field(default=0)
    idempotency_key: Optional[str] = None  # Prevent duplicate sends
    last_error: Optional[str] = None
    template_version: str = Field(default="v1")  # Template versioning
    language: str = Field(default="en")  # i18n support
    created_at: datetime = Field(default_factory=datetime.utcnow)

# Email Suppression List
class EmailSuppression(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    email: str = Field(unique=True)
    reason: str  # bounce, complaint, manual, hard_bounce
    created_at: datetime = Field(default_factory=datetime.utcnow)
    expires_at: Optional[datetime] = None  # For temporary suppressions

# GDPR Consent Model
class Consent(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    user_id: int = Field(foreign_key="user.id")
    consent_type: str  # marketing, analytics, necessary, third_party
    status: str  # granted, denied, withdrawn
    ip_address: Optional[str] = None
    user_agent: Optional[str] = None
    granted_at: Optional[datetime] = None
    withdrawn_at: Optional[datetime] = None
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)

# Data Processing Activity Model
class ProcessingActivity(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    user_id: int = Field(foreign_key="user.id")
    activity_name: str
    purpose: str
    legal_basis: str  # consent, legitimate_interest, contract, legal_obligation
    data_categories: str  # JSON string of data categories
    retention_period: str
    third_parties: str  # JSON string of third parties
    is_active: bool = Field(default=True)
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)

# Data Breach Report Model (GDPR Art.33/34 compliant)
class DataBreachReport(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    user_id: int = Field(foreign_key="user.id")
    breach_type: str  # unauthorized_access, data_loss, system_breach, misdelivery
    description: str
    affected_data: str  # JSON string of affected data
    affected_individuals: int
    discovery_date: datetime
    start_date: Optional[datetime] = None  # When breach started
    risk_level: Optional[str] = None  # low, medium, high
    reportable: Optional[bool] = None  # Whether to report to authority
    authority_notified_at: Optional[datetime] = None
    subjects_notified_at: Optional[datetime] = None
    status: str = Field(default="new")  # new, triage, authority_notified, subjects_notified, remediation, closed
    root_cause: Optional[str] = None
    remediation_measures: Optional[str] = None
    notes: Optional[str] = None  # JSON string for additional notes
    sla_deadline: Optional[datetime] = None  # 72h deadline for reporting
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)

# Breach Event Log (for audit trail)
class BreachEvent(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    breach_id: int = Field(foreign_key="databreachreport.id")
    actor: str  # user, system, authority
    action: str  # created, triaged, authority_notified, subjects_notified, closed
    payload: Optional[str] = None  # JSON string with event details
    timestamp: datetime = Field(default_factory=datetime.utcnow)

# Single-use download token for export bundles
class DownloadToken(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    request_id: int  # FK to export/DSAR request
    token: str = Field(index=True, unique=True)
    object_key: str
    expires_at: datetime
    used_at: Optional[datetime] = None
    revoked: bool = Field(default=False)
    created_at: datetime = Field(default_factory=datetime.utcnow)

# Consent Event Model
class ConsentEvent(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    organization_id: int = Field(foreign_key="organization.id", index=True)
    subject_id: str = Field(index=True)  # User identifier (email, phone, etc.)
    
    # Consent details
    channel: str  # email, sms, push, web, phone
    purpose: str
    status: str  # opt_in, opt_out, withdrawn
    
    # Source tracking
    source: Optional[str] = None  # Where consent was given (website, app, etc.)
    campaign_id: Optional[str] = None
    
    # Technical details
    ip_address: Optional[str] = None
    user_agent: Optional[str] = None
    
    # Timestamps
    occurred_at: datetime = Field(default_factory=datetime.utcnow)
    created_at: datetime = Field(default_factory=datetime.utcnow)
    
    # Additional data
    extra_data: Optional[str] = Field(default=None)  # JSON string

# Export Bundle Model
class ExportBundle(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    organization_id: int = Field(foreign_key="organization.id", index=True)
    
    # Bundle details
    bundle_type: str  # "regulator_audit", "compliance_report", "data_inventory"
    region: str  # "GDPR", "CCPA", "KVKK", "LGPD"
    title: str
    description: Optional[str] = None
    
    # Status and file info
    status: str = Field(default="pending")  # "pending", "processing", "completed", "failed"
    file_path: Optional[str] = None
    file_size: Optional[int] = None
    download_token: Optional[str] = None
    expires_at: Optional[datetime] = None
    
    # Metadata
    created_by: Optional[int] = Field(foreign_key="user.id", default=None)
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)
    completed_at: Optional[datetime] = None
    
    # Additional data
    extra_data: Optional[str] = Field(default=None)  # JSON string

# Preference Model
class Preference(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    organization_id: int = Field(foreign_key="organization.id", index=True)
    subject_id: str = Field(index=True)
    
    # Preference settings
    email_opt_in: bool = Field(default=False)
    sms_opt_in: bool = Field(default=False)
    push_opt_in: bool = Field(default=False)
    phone_opt_in: bool = Field(default=False)
    
    # Marketing preferences
    marketing_email: bool = Field(default=False)
    marketing_sms: bool = Field(default=False)
    marketing_push: bool = Field(default=False)
    
    # Communication frequency
    frequency_email: str = Field(default="weekly")  # daily, weekly, monthly, never
    frequency_sms: str = Field(default="monthly")
    
    # Timestamps
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)
    
    # Additional preferences
    preferences: Optional[str] = Field(default=None)  # JSON string

# Organization Model
class Organization(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    name: str = Field(index=True)
    slug: str = Field(unique=True, index=True)
    region_default: str = Field(default="gdpr")
    
    # Contact information
    contact_email: Optional[str] = None
    contact_phone: Optional[str] = None
    address: Optional[str] = None
    
    # Compliance settings
    dpo_name: Optional[str] = None
    dpo_email: Optional[str] = None
    dpo_phone: Optional[str] = None
    
    # Subscription info
    plan_type: str = Field(default="free")
    subscription_status: str = Field(default="active")
    
    # Timestamps
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)
    
    # Settings
    settings: Optional[str] = Field(default=None)  # JSON string
    is_active: bool = Field(default=True)

# Breach Model
class Breach(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    organization_id: int = Field(foreign_key="organization.id", index=True)
    
    # Basic info
    title: str
    description: str
    severity: str  # low, medium, high, critical
    
    # Timeline
    started_at: datetime
    detected_at: datetime
    reported_at: Optional[datetime] = None
    
    # Status and progress
    status: str = Field(default="detected")  # detected, investigating, reported, resolved, closed
    
    # Impact assessment
    affected_count: int = Field(default=0)
    data_types: Optional[str] = Field(default=None)  # JSON array
    
    # Regulatory requirements
    regulation: str = Field(default="gdpr")  # gdpr, ccpa, kvkk, lgpd
    countdown_deadline: datetime  # 72 hours from detection
    
    # Response details
    response_plan: Optional[str] = None
    mitigation_actions: Optional[str] = None  # JSON array
    notification_sent: bool = Field(default=False)
    
    # Timestamps
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)
    
    # Additional data
    extra_data: Optional[str] = Field(default=None)  # JSON string

# Export Bundle Model
class ExportBundle(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    organization_id: int = Field(foreign_key="organization.id", index=True)
    
    # Bundle details
    bundle_type: str  # "regulator_audit", "compliance_report", "data_inventory"
    region: str  # "GDPR", "CCPA", "KVKK", "LGPD"
    title: str
    description: Optional[str] = None
    
    # Status and file info
    status: str = Field(default="pending")  # "pending", "processing", "completed", "failed"
    file_path: Optional[str] = None
    file_size: Optional[int] = None
    download_token: Optional[str] = None
    expires_at: Optional[datetime] = None
    
    # Metadata
    created_by: Optional[int] = Field(foreign_key="user.id", default=None)
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)
    completed_at: Optional[datetime] = None
    
    # Additional data
    extra_data: Optional[str] = Field(default=None)  # JSON string

# Breach System Model
class BreachSystem(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    breach_id: int = Field(foreign_key="breach.id", index=True)
    
    # System details
    system_name: str
    system_type: str  # database, api, file_storage, etc.
    owner: Optional[str] = None
    contact_email: Optional[str] = None
    
    # Impact details
    data_categories: Optional[str] = None  # JSON array
    estimated_records: Optional[int] = None
    encryption_status: Optional[str] = None
    
    # Response
    containment_status: str = Field(default="not_contained")  # not_contained, contained, verified
    remediation_actions: Optional[str] = None  # JSON array
    
    # Timestamps
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)
    
    # Additional data
    notes: Optional[str] = None

# DPIA (Data Protection Impact Assessment) Model
class DPIA(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    organization_id: int = Field(foreign_key="organization.id", index=True)
    
    # Basic info
    title: str
    description: str
    processing_activity: str
    
    # Risk assessment
    risk_level: str = Field(default="medium")  # low, medium, high
    risk_score: Optional[int] = Field(default=None)  # AI-generated 0-100
    
    # Status and timeline
    status: str = Field(default="draft")  # draft, review, approved, rejected
    due_date: Optional[datetime] = None
    completed_at: Optional[datetime] = None
    
    # Data categories and subjects
    data_categories: Optional[str] = Field(default=None)  # JSON array
    data_subjects: Optional[str] = Field(default=None)  # JSON array
    
    # Legal basis and measures
    legal_basis: Optional[str] = None
    safeguards: Optional[str] = Field(default=None)  # JSON array
    mitigation_measures: Optional[str] = Field(default=None)  # JSON array
    
    # Stakeholders
    dpo_consulted: bool = Field(default=False)
    stakeholders: Optional[str] = Field(default=None)  # JSON array
    
    # Timestamps
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)
    
    # Additional data
    extra_data: Optional[str] = Field(default=None)  # JSON string

# Export Bundle Model
class ExportBundle(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    organization_id: int = Field(foreign_key="organization.id", index=True)
    
    # Bundle details
    bundle_type: str  # "regulator_audit", "compliance_report", "data_inventory"
    region: str  # "GDPR", "CCPA", "KVKK", "LGPD"
    title: str
    description: Optional[str] = None
    
    # Status and file info
    status: str = Field(default="pending")  # "pending", "processing", "completed", "failed"
    file_path: Optional[str] = None
    file_size: Optional[int] = None
    download_token: Optional[str] = None
    expires_at: Optional[datetime] = None
    
    # Metadata
    created_by: Optional[int] = Field(foreign_key="user.id", default=None)
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)
    completed_at: Optional[datetime] = None
    
    # Additional data
    extra_data: Optional[str] = Field(default=None)  # JSON string

# ROPA (Record of Processing Activities) Model
class ROPA(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    organization_id: int = Field(foreign_key="organization.id", index=True)
    
    # Basic info
    activity_name: str
    purpose: str
    description: Optional[str] = None
    
    # Legal basis
    legal_basis: str  # consent, contract, legal_obligation, vital_interests, public_task, legitimate_interests
    legitimate_interests: Optional[str] = None  # if legal_basis is legitimate_interests
    
    # Data categories
    data_categories: Optional[str] = Field(default=None)  # JSON array
    special_categories: Optional[str] = Field(default=None)  # JSON array (if any)
    
    # Data subjects
    data_subjects: str  # customers, employees, suppliers, etc.
    data_subject_rights: Optional[str] = Field(default=None)  # JSON array
    
    # Recipients and transfers
    recipients: Optional[str] = Field(default=None)  # JSON array
    third_countries: Optional[str] = Field(default=None)  # JSON array
    transfer_safeguards: Optional[str] = None
    
    # Retention and security
    retention_period: Optional[str] = None
    retention_criteria: Optional[str] = None
    security_measures: Optional[str] = Field(default=None)  # JSON array
    
    # Status and review
    status: str = Field(default="active")  # active, inactive, under_review
    last_reviewed: Optional[datetime] = None
    next_review: Optional[datetime] = None
    
    # Contact and responsibility
    data_controller: Optional[str] = None
    data_processor: Optional[str] = None
    joint_controllers: Optional[str] = Field(default=None)  # JSON array
    
    # Timestamps
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)
    
    # Additional data
    extra_data: Optional[str] = Field(default=None)  # JSON string

# Export Bundle Model
class ExportBundle(SQLModel, table=True):
    id: Optional[int] = Field(default=None, primary_key=True)
    organization_id: int = Field(foreign_key="organization.id", index=True)
    
    # Bundle details
    bundle_type: str  # "regulator_audit", "compliance_report", "data_inventory"
    region: str  # "GDPR", "CCPA", "KVKK", "LGPD"
    title: str
    description: Optional[str] = None
    
    # Status and file info
    status: str = Field(default="pending")  # "pending", "processing", "completed", "failed"
    file_path: Optional[str] = None
    file_size: Optional[int] = None
    download_token: Optional[str] = None
    expires_at: Optional[datetime] = None
    
    # Metadata
    created_by: Optional[int] = Field(foreign_key="user.id", default=None)
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)
    completed_at: Optional[datetime] = None
    
    # Additional data
    extra_data: Optional[str] = Field(default=None)  # JSON string
